// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String
  username String
  password String
  roles RoleOnUser[]
  projects Projects[]
}

model Roles {
  id          Int    @id @default(autoincrement())
  value       String @unique
  description String
  user        RoleOnUser[]

}

model RoleOnUser {
  userId Int
  users User @relation(fields: [userId], references: [id]) 
  roleId Int
  role Roles @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model Projects {
  id Int @id @default(autoincrement())
  name String
  description String
  createrAt DateTime @default(now())
  authorId Int
  user User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  columns Columns[]
}

model Columns{
  id Int @id @default(autoincrement())
  name String
  position Int
  projectId Int
  project Projects @relation(fields: [projectId], references: [id], onDelete: Cascade)
  cards Cards[]
}

model Cards {
  id Int @id @default(autoincrement())
  name String
  position Int
  description String
  createdAt DateTime @default(now())
  columnId Int
  columns Columns @relation(fields: [columnId], references: [id], onDelete: Cascade)
}